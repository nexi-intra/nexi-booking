# https://locize.com/blog/next-app-dir-i18n/
name: people
type: magicservice
organisation: nexi-intra
magicappversion: v0.0.1
description: |
  Application focusing on having a single point of entry in the form of a `person` to find all related information 
  - Users, Companies, Groups, Relations, Systems, Countries
react:
  templates:
    formfield: &formfield
      markup: |
        <FormField
         control={form.control}
         name="##NAME##"
         render={({ field }) => (
           <FormItem>
             <FormLabel>##LABEL##</FormLabel>
             <FormControl>
               ##FORMCONTROL##
             </FormControl>
             <FormDescription>
               ##DESCRIPTION##
             </FormDescription>
             <FormMessage />
           </FormItem>
         )}
        />
  components:
    stringformfield: &StringFormField
      name: formfield
      template: *formfield
      markup: |
        <Input placeholder="##PLACEHOLDER##" {...field} />

    numberformfield: &NumberFormField
      name: formfield
      template: *formfield

      markup: |
        <Input placeholder="##PLACEHOLDER##" {...field} />
    intformfield: &IntFormField
      name: formfield
      template: *formfield

      markup: |
        <Input placeholder="##PLACEHOLDER##" {...field} />
    datetimeformfield: &DateTimeFormField
      name: formfield
      template: *formfield

      markup: |
        <Input placeholder="##PLACEHOLDER##" {...field} />
    booleanformfield: &BooleanFormField
      name: formfield
      template: *formfield
      markup: |
        <div>Boolean not implemented</div>
      # markup: |
      #   <Input placeholder="##PLACEHOLDER##" {...field} />
    arrayformfield: &ArrayFormField
      name: formfield
      template: *formfield

      markup: |
        <Input placeholder="##PLACEHOLDER##" {...field} />
    lookupformfield: &LookupFormField
      name: formfield
      template: *formfield

      markup: |
        <Input placeholder="##PLACEHOLDER##" {...field} />
    referenceformfield: &ReferenceFormField
      name: formfield
      template: *formfield

      markup: |
        <Input placeholder="##PLACEHOLDER##" {...field} />

    jsonformfield: &JSONFormField
      name: formfield
      template: *formfield

      markup: |
        <Input placeholder="##PLACEHOLDER##" {...field} />
    viewitem: &ViewItem
      name: viewitem
      markup: |
        export function ViewItem<T>(props: {caption:string, value:T}) {
        const {caption, value} = props;
        return (
        <div>
          <div className="font-bold">{caption}</h1>
          <div >{value}</h1>
        </div>
        )
        }
    formitem: &EditItem
      name: formitem
      markup: |
        export function EditItem<T>(props: { caption:string, FormField : FormFieldType<T>, value:T, onChange: (value:T) => void}) {
        const {caption, value,ForField} = props;
        return (
        <div>
          <div className="font-bold">{caption}</h1>
          <div ><FormField<T> onChange={onChange} value={value} /></h1>
        </div>
        )
        }
defaults:
  viewitem: *ViewItem
  edititem: *EditItem
  primitive:
    json:
      formfield: *JSONFormField

    string:
      formfield: *StringFormField
    number:
      formfield: *NumberFormField
    datetime:
      formfield: *DateTimeFormField
    int:
      formfield: *IntFormField
    boolean:
      formfield: *BooleanFormField
    array:
      formfield: *ArrayFormField
    reference:
      formfield: *LookupFormField
baseattributes:
  record:
    &recordAttributes # Id + Created + Updated + CreatedBy + UpdatedBy are implicit
    - name: tenant
      type: string
      displayname: Tenant
      hidden: true
      required: true
    - name: searchindex
      type: string
      displayname: Search Index
      description: |
        Search Index is used for concatenating all searchable fields in a single field making in easier to search
      hidden: true
      required: true
    - name: name
      type: string
      displayname: Name
      required: true
    - name: description
      displayname: Description
      type: string
      required: false

entities:
  country: &country
    name: country
    displayname: Country
    description: Country
    baselineattributes: *recordAttributes
    additionalattributes:
      - name: code
        type: string
        required: true

      - name: flagurl
        type: string
        required: false
      - name: metadata
        type: json
        required: false

  site: &site
    name: site
    displayname: Site
    description: Site
    baselineattributes: *recordAttributes
    additionalattributes:
      - name: code
        type: string
        required: true
      - name: country
        type: reference
        required: true
        entity: *country
      - name: parkingenabled
        type: boolean
        required: false
      - name: deskbookingenabled
        type: boolean
        required: false
  building: &building
    name: building
    displayname: Building
    description: Building
    baselineattributes: *recordAttributes
    additionalattributes:
      - name: code
        type: string
        required: true
      - name: site
        type: reference
        required: true
        entity: *site

  floor: &floor
    name: floor
    displayname: Floor
    description: Floor
    baselineattributes: *recordAttributes
    additionalattributes:
      - name: code
        type: string
        required: true
      - name: floorplan
        type: string
        required: false

      - name: building
        type: reference
        required: true
        entity: *building

  desk: &desk
    name: desk
    displayname: Desk
    description: Desk
    baselineattributes: *recordAttributes
    additionalattributes:
      - name: code
        type: string
        required: true
      - name: floor
        type: reference
        required: true
        entity: *floor
      - name: metadata
        type: json
        required: false

  user: &user
    name: user
    displayname: User
    description: User
    baselineattributes: *recordAttributes
    additionalattributes:
      - name: homecountry
        type: reference
        required: true
        entity: *country
      - name: favouritedesks
        type: array
        required: false
        entity: *desk

  restritiongrouo: &restrictiongroup
    name: restrictiongroup
    displayname: Restriction Group
    description: Restriction Group
    baselineattributes: *recordAttributes
    additionalattributes:
      - name: code
        type: string
        required: true
      - desks:
        type: array
        required: false
        entity: *desk
      - users:
        type: array
        required: false
        entity: *user

  booking: &booking
    name: booking
    displayname: Booking
    description: Booking
    baselineattributes: *recordAttributes
    additionalattributes:
      - name: desk
        type: reference
        required: true
        entity: *desk
      - name: user
        type: reference
        required: true
        entity: *user
      - name: fromdatetime
        type: datetime
        required: true
      - name: todatetime
        type: datetime
        required: true

models:
  itemMethods: &itemMethods
    - name: read
      description: Read a single item
      parameters:
        - name: id
          description: The id of the item
          type: int64
          required: true
      returns:
        type: object

    - name: create
      description: Create a new item
      parameters:
        - name: item
          description: The item to create
          type: object
          required: true
      returns:
        type: object
    - name: update
      description: Update an existing item
      parameters:
        - name: item
          description: The item to update
          type: object
          required: true
      returns:
        type: object

    - name: delete
      description: Delete an existing item
      parameters:
        - name: id
          description: The id of the item
          type: int64
          required: true
      returns:
        type: void
    - name: search
      description: Search for items
      parameters:
        - name: query
          description: The search query
          type: string
          required: true

      returns:
        type: page

services:
  - name: user
    description: Manage users
    entity:
      type: record
      model: user
      objectname: User
      entity: *user
    methods: *itemMethods
    procedures:
      setcountry:
        description: Update the default country for a user, user record will be update or created
        parameters:
          - name: upn
            description: The upn of the user
            type: string
            required: true
          - name: country
            description: The country to set as default
            reference: *country
            required: true
        returns:
          type: object
          reference: *user

  - name: country
    description: Manage countries
    entity:
      type: record
      model: country
      objectname: Country
      entity: *country
    methods: *itemMethods

  - name: site
    description: Manage sites
    entity:
      type: record
      model: site
      objectname: Site
      entity: *site
    methods: *itemMethods

  - name: building
    description: Manage buildings
    entity:
      type: record
      model: building
      objectname: Building
      entity: *building
    methods: *itemMethods

  - name: floor
    description: Manage floors
    entity:
      type: record
      model: floor
      objectname: Floor
      entity: *floor
    methods: *itemMethods

  - name: desk
    description: Manage desks
    entity:
      type: record
      model: desk
      objectname: Desk
      entity: *desk
    methods: *itemMethods

  - name: restrictiongroup
    description: Manage restriction groups
    entity:
      type: record
      model: restrictiongroup
      objectname: RestrictionGroup
      entity: *restrictiongroup
    methods: *itemMethods
    procedures:
      adddesk:
        description: Add a desk to a restriction group
        parameters:
          - name: id
            description: The id of the restriction group
            type: int64
            required: true
          - name: desk
            description: The desk to add
            reference: *desk
            required: true
        returns:
          type: object
          reference: *restrictiongroup

      removedesk:
        description: Remove a desk from a restriction group
        parameters:
          - name: id
            description: The id of the restriction group
            type: int64
            required: true
          - name: desk
            description: The desk to remove
            reference: *desk
            required: true
        returns:
          type: object
          reference: *restrictiongroup
      adduser:
        description: Add a user to a restriction group
        parameters:
          - name: id
            description: The id of the restriction group
            type: int64
            required: true
          - name: user
            description: The user to add
            reference: *user
            required: true
        returns:
          type: object
          reference: *restrictiongroup
      removeuser:
        description: Remove a user from a restriction group
        parameters:
          - name: id
            description: The id of the restriction group
            type: int64
            required: true
          - name: user
            description: The user to remove
            reference: *user
            required: true
        returns:
          type: object
          reference: *restrictiongroup

  - name: booking
    description: Manage bookings
    entity:
      type: record
      model: booking
      objectname: Booking
      entity: *booking
    methods: *itemMethods
    procedures:
      createbooking:
        description: Book a desk
        parameters:
          - name: desk
            description: The desk to book
            reference: *desk
            required: true
          - name: user
            description: The user booking the desk
            reference: *user
            required: true
          - name: fromdatetime
            description: The start date and time of the booking
            type: datetime
            required: true
          - name: todatetime
            description: The end date and time of the booking
            type: datetime
            required: true
        returns:
          type: object
          reference: *booking
      deletebooking:
        description: Delete a booking
        parameters:
          - name: id
            description: The id of the booking
            type: int64
            required: true
        returns:
          type: void
      movebooking:
        description: Move a booking
        parameters:
          - name: id
            description: The id of the booking
            type: int64
            required: true
          - name: desk
            description: The desk to move the booking to
            reference: *desk
            required: true
        returns:
          type: object
          reference: *booking
      changebooking:
        description: Change a booking
        parameters:
          - name: id
            description: The id of the booking
            type: int64
            required: true
          - name: fromdatetime
            description: The start date and time of the booking
            type: datetime
            required: true
          - name: todatetime
            description: The end date and time of the booking
            type: datetime
            required: true
        returns:
          type: object
          reference: *booking
